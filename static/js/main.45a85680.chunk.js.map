{"version":3,"sources":["store.js","Components/Header/HeaderPresenter.js","Components/Header/index.js","Components/Header/HeaderContainer.js","Components/Notification/NotificationPresenter.js","Components/Notification/index.js","Components/Notification/NotificationContainer.js","Components/App/AppPresenter.js","Components/App/index.js","Components/App/AppContainer.js","typography.js","webpack:///./src/index.js?b635"],"names":["Store","React","createContext","Header","styled","header","HeaderIcon","span","Number","HeaderPresenter","full","justifyBetween","alignCenter","name","Consumer","store","notifications","unseen","Object","keys","map","key","seen","push","length","getUnseen","HeaderContainer","state","this","Component","Notification","div","props","Title","Button","button","success","danger","NotificationPresenter","id","text","onClick","seeNotification","deleteNotification","NotificationContainer","AppPresenter","column","AppContainer","_deleteNotification","setState","currentState","_seeNotification","Provider","value","Typography","googleFonts","styles","headerFontFamily","bodyFontFamily","includeNormalize","injectStyles","GlobalStyle","createGlobalStyle","reset","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.45a85680.chunk.js","sourcesContent":["import React from \"react\";\r\nconst Store = React.createContext(null);\r\nexport default Store;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Flex, { FlexItem } from \"styled-flex-component\";\r\nimport FontAwesome from \"react-fontawesome\";\r\nimport Store from \"store\";\r\n\r\nconst Header = styled.header`\r\n  height: 100px;\r\n  background-color: #ecf0f1;\r\n  padding: 0 40px;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst HeaderIcon = styled.span`\r\n  width: 40px;\r\n  height: 40px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  display: flex;\r\n  border-radius: 50%;\r\n  color: white;\r\n  background-color: #3498db;\r\n  margin-right: 30px;\r\n  cursor: pointer;\r\n  box-shadow: 0 4px 6px rgba(50, 50, 93, 0.11), 0 1px 3px rgba(0, 0, 0, 0.08);\r\n  transition: all 0.2s ease-out;\r\n  position: relative;\r\n  &:hover {\r\n    transform: translateY(-1px);\r\n    box-shadow: 0 7px 14px rgba(50, 50, 93, 0.1), 0 3px 6px rgba(0, 0, 0, 0.08);\r\n  }\r\n`;\r\n\r\nconst Number = styled.span`\r\n  height: 30px;\r\n  width: 30px;\r\n  border-radius: 50%;\r\n  background-color: #8e44ad;\r\n  position: absolute;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  left: 25px;\r\n  top: -10px;\r\n`;\r\n\r\nconst getUnseen = notifications => {\r\n  let unseen = [];\r\n  Object.keys(notifications).map(key => {\r\n    if (!notifications[key].seen) {\r\n      return unseen.push(notifications[key]);\r\n    }\r\n  });\r\n  return unseen.length;\r\n};\r\n\r\nconst HeaderPresenter = () => (\r\n  <Header>\r\n    <Flex full justifyBetween alignCenter>\r\n      <FlexItem>\r\n        <h3>Antiredux</h3>\r\n      </FlexItem>\r\n      <FlexItem>\r\n        <Flex>\r\n          <HeaderIcon>\r\n            <FontAwesome name=\"user\" />\r\n          </HeaderIcon>\r\n          <HeaderIcon>\r\n            <FontAwesome name=\"cog\" />\r\n          </HeaderIcon>\r\n          <HeaderIcon>\r\n            <FontAwesome name=\"bell\" />\r\n            <Number>\r\n              <Store.Consumer>\r\n                {store => getUnseen(store.notifications)}\r\n              </Store.Consumer>\r\n            </Number>\r\n          </HeaderIcon>\r\n        </Flex>\r\n      </FlexItem>\r\n    </Flex>\r\n  </Header>\r\n);\r\n\r\nexport default HeaderPresenter;\r\n","import HeaderContainer from \"./HeaderContainer\";\r\nexport default HeaderContainer;\r\n","import React, { Component } from \"react\";\r\nimport HeaderPresenter from \"./HeaderPresenter\";\r\n\r\nclass HeaderContainer extends Component {\r\n  static propTypes = {};\r\n  state = {};\r\n  render() {\r\n    return <HeaderPresenter {...this.state} />;\r\n  }\r\n}\r\n\r\nexport default HeaderContainer;\r\n","import React, { Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Flex, { FlexItem } from \"styled-flex-component\";\r\nimport FontAwesome from \"react-fontawesome\";\r\nimport Store from \"store\";\r\n\r\nconst Notification = styled.div`\r\n  background-color: white;\r\n  box-shadow: 0 7px 14px rgba(50, 50, 93, 0.1), 0 3px 6px rgba(0, 0, 0, 0.08);\r\n  width: 80%;\r\n  padding: 20px;\r\n  border-radius: 15px;\r\n  margin-bottom: 15px;\r\n  box-sizing: border-box;\r\n  border: 2px solid ${props => (props.seen ? \"transparent\" : \"#f1c40f\")};\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  height: 40px;\r\n  width: 40px;\r\n  border-radius: 50%;\r\n  border: 0;\r\n  color: white;\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  background-color: ${props => {\r\n    if (props.seen) {\r\n      return \"#7f8c8d\";\r\n    } else if (props.success) {\r\n      return \"#2ecc71\";\r\n    } else if (props.danger) {\r\n      return \"#e74c3c\";\r\n    }\r\n  }};\r\n  box-shadow: 0 4px 6px rgba(50, 50, 93, 0.11), 0 1px 3px rgba(0, 0, 0, 0.08);\r\n  transition: all 0.2s ease-out;\r\n  &:hover {\r\n    transform: translateY(-1px);\r\n    box-shadow: 0 7px 14px rgba(50, 50, 93, 0.1), 0 3px 6px rgba(0, 0, 0, 0.08);\r\n  }\r\n  &:active,\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  &:active {\r\n    transform: translateY(1px);\r\n  }\r\n`;\r\n\r\nconst NotificationPresenter = ({ id, text, seen }) => (\r\n  <Notification seen={seen}>\r\n    <Flex alignCenter justifyBetween>\r\n      <Title>{text}</Title>\r\n      <FlexItem>\r\n        <Fragment>\r\n          <Store.Consumer>\r\n            {store => (\r\n              <Fragment>\r\n                <Button\r\n                  success\r\n                  seen={seen}\r\n                  onClick={() => store.seeNotification(id)}\r\n                >\r\n                  <FontAwesome name=\"check\" />\r\n                </Button>\r\n                <Button\r\n                  danger\r\n                  seen={seen}\r\n                  onClick={() => store.deleteNotification(id)}\r\n                >\r\n                  <FontAwesome name=\"times\" />\r\n                </Button>\r\n              </Fragment>\r\n            )}\r\n          </Store.Consumer>\r\n        </Fragment>\r\n      </FlexItem>\r\n    </Flex>\r\n  </Notification>\r\n);\r\n\r\nNotificationPresenter.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  seen: PropTypes.bool.isRequired,\r\n  id: PropTypes.number.isRequired\r\n};\r\n\r\nexport default NotificationPresenter;\r\n","import NotificationContainer from \"./NotificationContainer\";\r\nexport default NotificationContainer;\r\n","import React, { Component } from \"react\";\r\nimport NotificationPresenter from \"./NotificationPresenter\";\r\n\r\nclass NotificationContainer extends Component {\r\n  static propTypes = {};\r\n  state = {};\r\n  render() {\r\n    return <NotificationPresenter {...this.props} {...this.state} />;\r\n  }\r\n}\r\n\r\nexport default NotificationContainer;\r\n","import React, { Fragment } from \"react\";\r\nimport Header from \"Components/Header\";\r\nimport Flex from \"styled-flex-component\";\r\nimport Notification from \"Components/Notification\";\r\nimport Store from \"store\";\r\n\r\nconst AppPresenter = () => (\r\n  <Fragment>\r\n    <Header />\r\n    <Flex alignCenter full column>\r\n      <Store.Consumer>\r\n        {store => {\r\n          return Object.keys(store.notifications).map(key => (\r\n            <Notification\r\n              key={store.notifications[key].id}\r\n              id={store.notifications[key].id}\r\n              text={store.notifications[key].text}\r\n              seen={store.notifications[key].seen}\r\n            />\r\n          ));\r\n        }}\r\n      </Store.Consumer>\r\n    </Flex>\r\n  </Fragment>\r\n);\r\n\r\nexport default AppPresenter;\r\n","import AppContainer from \"./AppContainer\";\nexport default AppContainer;\n","import React, { Component } from \"react\";\r\nimport AppPresenter from \"./AppPresenter\";\r\nimport Store from \"store\";\r\n\r\nclass AppContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this._deleteNotification = id => {\r\n      this.setState(currentState => {\r\n        const newState = delete currentState.notifications[id];\r\n        return newState;\r\n      });\r\n    };\r\n    this._seeNotification = id => {\r\n      this.setState(currentState => {\r\n        return {\r\n          ...currentState,\r\n          notifications: {\r\n            ...currentState.notifications,\r\n            [id]: {\r\n              ...currentState.notifications[id],\r\n              seen: true\r\n            }\r\n          }\r\n        };\r\n      });\r\n    };\r\n    this.state = {\r\n      notifications: {\r\n        \"1\": {\r\n          id: 1,\r\n          text: \"Something\",\r\n          seen: false\r\n        },\r\n        \"2\": {\r\n          id: 2,\r\n          text: \"Something else\",\r\n          seen: false\r\n        },\r\n        \"3\": {\r\n          id: 3,\r\n          text: \"Something else but different\",\r\n          seen: false\r\n        }\r\n      },\r\n      deleteNotification: this._deleteNotification,\r\n      seeNotification: this._seeNotification\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <Store.Provider value={this.state}>\r\n        <AppPresenter />\r\n      </Store.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppContainer;\r\n","import Typography from \"typography\";\r\n\r\nconst typography = new Typography({\r\n  googleFonts: [\r\n    {\r\n      name: \"Nunito\",\r\n      styles: [\"400\", \"600\"]\r\n    },\r\n    {\r\n      name: \"Open Sans\",\r\n      styles: [\"400\"]\r\n    }\r\n  ],\r\n  headerFontFamily: [\r\n    \"Nunito\",\r\n    \"Helvetica Neue\",\r\n    \"Segoe UI\",\r\n    \"Helvetica\",\r\n    \"Arial\",\r\n    \"sans-serif\"\r\n  ],\r\n  bodyFontFamily: [\r\n    \"Open Sans\",\r\n    \"Helvetica Neue\",\r\n    \"Segoe UI\",\r\n    \"Helvetica\",\r\n    \"Arial\",\r\n    \"sans-serif\"\r\n  ],\r\n  includeNormalize: false\r\n});\r\n\r\ntypography.injectStyles();\r\n","import React, { Fragment } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"Components/App\";\r\nimport { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\nimport \"./typography\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n${reset};\r\nbody{\r\n    background-color:#ecf0f1;\r\n}`;\r\n\r\nReactDOM.render(\r\n  <Fragment>\r\n    <GlobalStyle />\r\n    <App />\r\n  </Fragment>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}